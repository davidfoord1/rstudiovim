% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsvim_exec_file.R
\name{rsvim_exec_file}
\alias{rsvim_exec_file}
\title{Execute all commands in rsvim config file}
\usage{
rsvim_exec_file(con = rsvim_default_file())
}
\arguments{
\item{con}{A string file path or connection object for a file with Vim
commands to execute.}
}
\value{
Returns \code{NULL} invisibly
}
\description{
Execute each line in a file as Vim commands. In the file each
line should contain a single Vim command and the last line should be a new
line.

We can use Vim commands \code{map}, \code{imap}, \code{nmap} and \code{vmap} in our file to
customise our source editor keybindings. These bindings persist for the
duration of the RStudio session. Then by using \code{rsvim_exec_file()} in our
\link{.Rprofile} to execute R code at the start of every R session, we can
ensure that these bindings are always active.
}
\details{
A command is the text you would type in the Vim command dialogue box
after pressing \code{:} and before pressing \code{Enter}. This function will simulate
the key presses to execute all of the commands in the file. You can include
comments in lines starting with double quotes \verb{"}.

You can set up a binding from Vim normal mode like \verb{:imap jk <Esc>}. If you
include the line \verb{imap jk <Esc>} in the \code{con} file, this function will
execute it for you.

The default file is called \code{.vimrc}, but it can be any file with text in
the right format.
}
\examples{
\dontrun{
# Put something like this in your .Rprofile file:
if (interactive()) rsvim_exec_file()
}
}
\seealso{
\code{\link[=rsvim_exec]{rsvim_exec()}} to execute individual commands.

\code{\link[=rsvim_default_file]{rsvim_default_file()}} to get the default file path.
}
