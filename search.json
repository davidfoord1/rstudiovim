[{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"keybinding-commands","dir":"Articles","previous_headings":"","what":"Keybinding commands","title":"rstudiovim","text":"RStudio offers commands setting key bindings: imap - insert mode. nmap - normal mode. vmap - visual mode. map - normal visual modes. general structure goes like : <map_command> <new_key_sequence> <keys_to_execute> example bind home-row keys exit insert mode normal mode, command : imap jk <Esc> Note map, meaning binding applies insert mode. , insert mode, key sequence jk mapped Esc key, typical way move insert mode normal mode.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"executing-commands","dir":"Articles","previous_headings":"Keybinding commands","what":"Executing commands","title":"rstudiovim","text":"Assuming already Vim key bindings active RStudio source editor, can bring Vim command mode normal mode pressing :, type command press Enter execute . starting normal mode press keys, apply example keybinding imap jk <Esc>, full pressing keys : m p <Space> j k <Space> < E s c > <Enter>.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"recursive-keybindings","dir":"Articles","previous_headings":"Keybinding commands","what":"Recursive keybindings","title":"rstudiovim","text":"One thing watch commands listed recursive. use command map p p, won‚Äôt able paste anymore p just refers instead paste command. Pressing p just nothing. present RStudio offer non-recurseive (nore) versions map commands typically among Vim ex commands like noremap. means ‚Äôre mostly limited creating commands new key chains, like jk .","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"applying-commands-with-rstudiovim","dir":"Articles","previous_headings":"","what":"Applying commands with {rstudiovim}","title":"rstudiovim","text":"‚Äôre happy command can run RStudio, relatively straightforward get command run every session. {rstudiovim} installed loaded can set config file executed every session. ‚Äôve read README, ‚Äôve already seen everything need. typical config file called .vimrc. can create version location supply path, simplest usage default path provided. add commands file, separate line. can add comment lines preceding double quotes \" like : must course save file! need point {rstudiovim} file execute. default file path, ‚Äôs simple : prerequisite file open front source editor though going enter commands - package just pressing keys . see command-line dialogue box flash might able glimpse ‚Äôs typed. Don‚Äôt provide inputs happening, interrupt process. done, reports used different path, pass first argument. ‚Äôs read readLines(), can can remote location well - can make easy share config devices. example:","code":"file.edit(rsvim_default_path()) \" home-row exit from insert mode imap jk <Esc> rsvim_exec_file() #> .vimrc executed. rsvim_exec_file(\"https://raw.github.com/davidfoord1/rstudiovim/main/inst/example.vimrc\")"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"applying-commands-to-every-session-with-an-rprofile","dir":"Articles","previous_headings":"Applying commands with {rstudiovim}","what":"Applying commands to every session with an Rprofile","title":"rstudiovim","text":".Rprofile file containing R code executed start every R session. mindful can .Rprofile user level project level - one project level executed instead user level one, make sure rsvim call need . using argument rprofile = TRUE exec file command set hook execute R Studio session start . won‚Äôt execute every R session restart - won‚Äôt need bindings persist R Studio session. get config file executed, include following R code: Alternatively think might want package attached every session: , remember save file. Ok, . Now open new RStudio session, see {rstudiovim} executing key presses .","code":"# User level file.edit(\"~/.Rprofile\") # Project level file.edit(\".Rprofile\") if (interactive) {   rstudiovim::rsvim_exec_file(rprofile = TRUE) } if (interactive) {   library(rstudiovim)   rsvim_exec_file(rprofile = TRUE) }"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"rstudiovim","text":"First, Vim implementation quite limited, always make sure command one can execute RStudio first. doesn‚Äôt, ‚Äôs much {rstudiovim} can . something doesn‚Äôt work usually , try restarting R session executing rsvim_exec_file() call . Sometimes execution gets interrupted processes. command works type , doesn‚Äôt seem work {rstudiovim}, may issue parsing commands translation key presses. argument wait can specify seconds wait commands typed executed. way can review actually typed. find disparity typed ‚Äôs .virmc, please raise (add related) GitHub issue. can use rsvim_exec() single command helps narrow behaviour .","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Foord. Author, maintainer.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Foord D (2024). rstudiovim: Vim configuration RStudio. R package version 0.0.0.9000, https://davidfoord1.github.io/rstudiovim/, https://github.com/davidfoord1/rstudiovim.","code":"@Manual{,   title = {rstudiovim: Vim configuration for RStudio},   author = {David Foord},   year = {2024},   note = {R package version 0.0.0.9000, https://davidfoord1.github.io/rstudiovim/},   url = {https://github.com/davidfoord1/rstudiovim}, }"},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"configure-rstudio-vim-keybindings-Ô∏è","dir":"","previous_headings":"","what":"Configure RStudio Vim keybindings ‚å®Ô∏è","title":"Vim configuration for RStudio","text":"RStudio supports Vim keybindings source editor, doesn‚Äôt support Vim keybinding config. {rstudiovim} offers ü™ü Windows-workaround reading Vim commands file simulating key presses execute behalf. Ok, slow moment. ‚Äôre , probably seriously considering using different editor, comprehensive configurable Vim features. Check Neovim R.nvim quarto-nvim. clear, package neat RStudio API integration Vim mode, option. just: list buttons want pressed; buttons pressed automatically . Nonetheless, kind works, welcome go crazy ‚Ä¶","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"overview","dir":"","previous_headings":"Configure RStudio Vim keybindings ‚å®Ô∏è","what":"Overview","title":"Vim configuration for RStudio","text":"can install package GitHub : Attach load package : Create edit config file (.vimrc) Vim command line. Edit suggest path: Use Vim commands map, imap, nmap vmap file create new keybindings. Execute commands file one function call persist RStudio session. Go package execute commands start every RStudio session using .Rprofile:","code":"# install.packages(\"remotes\") remotes::install_github(\"davidfoord1/rstudiovim\") library(rstudiovim) file.edit(rsvim_default_path()) # Interactively rsvim_exec_file() # In your Rprofile rstudiovim::rsvim_exec_file(rprofile = TRUE)"},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"example-","dir":"","previous_headings":"","what":"Example üîç","title":"Vim configuration for RStudio","text":"editing normal mode press : enter command-line mode, typing command pressing Enter execute . wanted home-row key chain exit insert mode might use ex command imap jk <Esc>. whenever insert mode type jk, return normal mode. , mappings persist RStudio session, {rstudiovim} help apply settings every time editing RStudio. Write commands .vimrc file command must line. include preceding :. Just use text enter command dialogue box. can add comment lines preceding double quotes \" like : Edit .Rprofile Include function call execute file‚Äôs commands. files saved, now every session, can use jk return normal mode.","code":"\" home-row exit from insert mode imap jk <Esc> file.edit(\"~/.Rprofile\") if (interactive())  {   rstudiovim::rsvim_exec_file(rprofile = TRUE) }"},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"config-in-the-cloud-Ô∏è","dir":"","previous_headings":"","what":"Config in the cloud ‚òÅÔ∏è","title":"Vim configuration for RStudio","text":"exec file function points default rsvim_default_path() path, can use text file connection object containing Vim commands. instance can use web location easily share config machines, like execute example vimrc:","code":"rsvim_exec_file(\"https://raw.github.com/davidfoord1/rstudiovim/main/inst/example.vimrc\")"},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"conditions-for-success-","dir":"","previous_headings":"","what":"Conditions for success. üìÉ","title":"Vim configuration for RStudio","text":"‚Äôre using RStudio Windows. Setting Keybinding set editor must Vim (course!). file must open source editor, execute Vim commands navigated source . must file tab front, non-file tab like View() pane. Don‚Äôt give inputs button presses executed can interrupt .","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rstudiovim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/exec_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"Error while executing Vim command ‚Äî exec_stop","title":"Error while executing Vim command ‚Äî exec_stop","text":"Helper function rsvim_exec","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/exec_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error while executing Vim command ‚Äî exec_stop","text":"","code":"exec_stop(message, command, suggestion = \"\")"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/exec_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error while executing Vim command ‚Äî exec_stop","text":"message statement describes error occurred. command Vim command attempted. suggestion suggest possible cause/fix error.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/exec_stop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error while executing Vim command ‚Äî exec_stop","text":"Exits R execution.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_default_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get suggested config file path ‚Äî rsvim_default_path","title":"Get suggested config file path ‚Äî rsvim_default_path","text":"file .vimrc located %APPDATA%/RStudio/keybindings/ can also find RStudio's JSON keybinding config files.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_default_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get suggested config file path ‚Äî rsvim_default_path","text":"","code":"rsvim_default_path()"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_default_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get suggested config file path ‚Äî rsvim_default_path","text":"String. full file path .vimrc","code":""},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_default_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get suggested config file path ‚Äî rsvim_default_path","text":"","code":"if (FALSE) { # \\dontrun{ file.edit(rsvim_default_path()) } # }"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute vim command in source editor ‚Äî rsvim_exec","title":"Execute vim command in source editor ‚Äî rsvim_exec","text":"Pass string executed Vim command RStudio source editor. function sends input key presses type command.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute vim command in source editor ‚Äî rsvim_exec","text":"","code":"rsvim_exec(command, wait = 0)"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute vim command in source editor ‚Äî rsvim_exec","text":"command String. vim command execute. text type vim command dialogue box pressing : pressing Enter. wait Numeric. Seconds delay typing command pressing enter. can give time review commands testing troubleshooting.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute vim command in source editor ‚Äî rsvim_exec","text":"Returns NULL invisibly.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"conditions","dir":"Reference","previous_headings":"","what":"Conditions","title":"Execute vim command in source editor ‚Äî rsvim_exec","text":"Vim keybindings must enabled must file open front source editor execute commands moved focus source . error different front like View() tab.","code":""},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute vim command in source editor ‚Äî rsvim_exec","text":"","code":"if (FALSE) { # \\dontrun{ #' # Create a home-row binding jk to go from insert mode to normal mode. rsvim_exec(\"imap jk <Esc>\")  # Replace \"text\" with \"rep\" everywhere in the active document. rsvim_exec(\"%s/text/rep/g\")  # Bring up RStudio's Vim help (see Ex Commands for other commands) rsvim_exec(\"help\") } # }"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute all commands in a vim config file ‚Äî rsvim_exec_file","title":"Execute all commands in a vim config file ‚Äî rsvim_exec_file","text":"Execute line file Vim commands. Include Vim commands map, imap, nmap vmap file customise source editor keybindings. Use rsvim_exec_file() execute commands. Bindings persist duration RStudio session. Use rsvim_exec_file(rprofile = TRUE) .Rprofile execute commands RStudio startup, always active.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute all commands in a vim config file ‚Äî rsvim_exec_file","text":"","code":"rsvim_exec_file(con = rsvim_default_path(), rprofile = FALSE, wait = 0)"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute all commands in a vim config file ‚Äî rsvim_exec_file","text":"con string file path connection object file Vim commands execute. rprofile Logical. Set TRUE calling function within .Rprofile .e. RStudio API available. changes behaviour immediate execution waiting RStudio API become available. Currently works RStudio startup, R session restart. wait Numeric. Seconds delay typing command pressing enter. can give time review commands testing troubleshooting.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute all commands in a vim config file ‚Äî rsvim_exec_file","text":"Returns NULL invisibly","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute all commands in a vim config file ‚Äî rsvim_exec_file","text":"can execute command Vim normal mode manually pressing : enter command mode, typing command pressing Enter. use function write commands file passed con. can include comments lines starting double quotes \". command line, like: imap jk <Esc> function simulate key presses execute commands file. default file called .vimrc, can file text right format.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"rprofile-execution","dir":"Reference","previous_headings":"","what":"Rprofile execution","title":"Execute all commands in a vim config file ‚Äî rsvim_exec_file","text":"rprofile = TRUE function uses setHook() wait RStudio API become available executing commands. triggered first time RStudio session opened, every R session restart.","code":""},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute all commands in a vim config file ‚Äî rsvim_exec_file","text":"","code":"if (FALSE) { # \\dontrun{ # Execute interactively: rsvim_exec_file()  # Execute on startup with this in your .Rprofile file: if (interactive()) rsvim_exec_file(rprofile = TRUE) } # }"}]
