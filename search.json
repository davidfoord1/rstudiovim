[{"path":"https://davidfoord1.github.io/rstudiovim/articles/config-examples.html","id":"build-from-a-template","dir":"Articles","previous_headings":"","what":"Build from a template","title":"Build your config from examples","text":"simple examples provided basic.vimrc. can see example rsvim_example_path() can use start building config : function takes basic examples, writes .virmc file opens make edits. can also specify files copy :","code":"rsvim_use_template() rsvim_use_template(   to = \"path/to/your/.virmc\",   from = \"path/to/another/template/.vimrc\" )"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/config-examples.html","id":"basic-example","dir":"Articles","previous_headings":"","what":"Basic Example","title":"Build your config from examples","text":"Home row exit insert mode - inoremap jk <Esc> might seen enough example now, ‚Äôre covering anyway. insert mode, non-recursively noremap map key chain jk key chain <Esc>. Esc standard way exit insert normal mode, gives home row way . can pretty neat, consider whether ‚Äôre likely typing jk insert mode. use non-recursive mapping safety, instance map Esc something else, jk still expected default Esc behaviour. Note iNULLs also Ctrl+[ method leaving insert mode, might sufficiently convenient compared Esc. Multiple replace paste - noremap \\p \"0p New line normal mode noremap \\o o<Esc> noremap \\O O<Esc>","code":"writeLines(readLines(rsvim_example_path())) \" home-row exit from insert mode inoremap jk <Esc>  \" paste from yank register \" for multiple replacements with original yank noremap \\p \"0p  \" create a new line and stay in normal mode noremap \\o o<Esc> noremap \\O O<Esc>"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/config-examples.html","id":"full-example","dir":"Articles","previous_headings":"","what":"Full example","title":"Build your config from examples","text":"lot examples given full example, can build ","code":"rsvim_use_template(from = rsvim_example_path(\"full_example\"))"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"keybinding-commands","dir":"Articles","previous_headings":"","what":"Keybinding commands","title":"rstudiovim","text":"RStudio offers commands setting key bindings: map - normal, visual operator pending modes. imap - insert mode. nmap - normal mode. vmap - visual mode. omap - operator pending mode. general structure goes like : <map_command> <new_key_sequence> <keys_to_execute> example bind home-row keys exit insert mode normal mode, command : imap jk <Esc> Note map, meaning binding applies insert mode. , insert mode, key sequence jk mapped Esc key, typical way move insert mode normal mode.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"executing-commands","dir":"Articles","previous_headings":"Keybinding commands","what":"Executing commands","title":"rstudiovim","text":"Assuming already Vim key bindings active RStudio source editor, can bring Vim command mode normal mode pressing :, type command press Enter execute . starting normal mode press keys, apply example keybinding imap jk <Esc>, full pressing keys : m p <Space> j k <Space> < E s c > <Enter>.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"non-recursive-key-bindings","dir":"Articles","previous_headings":"Keybinding commands","what":"Non-recursive key bindings","title":"rstudiovim","text":"map commands listed recursive. use command map p p, won‚Äôt able paste anymore p just refers instead paste command. non-recursive equivalents different modes, just replace map noremap. useful want tweak/extend functionality existing mappings. allows us things like centre screen search results: nnoremap n nzz ‚Äôs n normal mode nore non-recursive map key binding.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"clear-bindings","dir":"Articles","previous_headings":"Keybinding commands","what":"Clear bindings","title":"rstudiovim","text":"mapclear versions commands remove mappings ‚Äôve created. can clear bindings : can also completely remove bindings unmap (use carefully!)","code":"nmapclear n"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"applying-commands-with-rstudiovim","dir":"Articles","previous_headings":"","what":"Applying commands with {rstudiovim}","title":"rstudiovim","text":"‚Äôre happy command can run RStudio, relatively straightforward get command run every session. {rstudiovim} installed loaded can set config file executed every session. ‚Äôve read README, ‚Äôve already seen everything need. typical config file called .vimrc. can create version location supply path, simplest usage default path provided. add commands file, separate line. can add comment lines preceding double quotes \" like : must course save file! need point {rstudiovim} file execute. default file path, ‚Äôs simple : prerequisite file open front source editor though going enter commands - package just pressing keys . see command-line dialogue box flash might able glimpse ‚Äôs typed. Don‚Äôt provide inputs happening, interrupt process. done, reports used different path, pass first argument. ‚Äôs read readLines(), can can remote location well - can make easy share config devices. example:","code":"file.edit(rsvim_default_path()) \" home-row exit from insert mode imap jk <Esc> rsvim_exec_file() #> .vimrc executed. rsvim_exec_file(\"https://raw.github.com/davidfoord1/rstudiovim/main/inst/example.vimrc\")"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"applying-commands-to-every-session-with-an-rprofile","dir":"Articles","previous_headings":"Applying commands with {rstudiovim}","what":"Applying commands to every session with an Rprofile","title":"rstudiovim","text":".Rprofile file containing R code executed start every R session. mindful can .Rprofile user level project level - one project level executed instead user level one, make sure rsvim call need . using argument rprofile = TRUE exec file command set hook execute R Studio session start . won‚Äôt execute every R session restart - won‚Äôt need bindings persist R Studio session. get config file executed, include following R code: Alternatively think might want package attached every session: , remember save file. Ok, . Now open new RStudio session, see {rstudiovim} executing key presses .","code":"# User level file.edit(\"~/.Rprofile\") # Project level file.edit(\".Rprofile\") if (interactive) {   rstudiovim::rsvim_exec_file(rprofile = TRUE) } if (interactive) {   library(rstudiovim)   rsvim_exec_file(rprofile = TRUE) }"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"templates","dir":"Articles","previous_headings":"Applying commands with {rstudiovim}","what":"Templates","title":"rstudiovim","text":"can quickly set config basic.vimrc example using: can see vignette(\"config-examples\") walk using templates example commands might want use.","code":"rsvim_use_template()"},{"path":"https://davidfoord1.github.io/rstudiovim/articles/rstudiovim.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"rstudiovim","text":"First, Vim implementation quite limited, always make sure command one can execute RStudio first. doesn‚Äôt, ‚Äôs much {rstudiovim} can . Make sure update RStudio latest version keep date functionality. something doesn‚Äôt work usually , try restarting R session executing rsvim_exec_file() call . Sometimes execution gets interrupted processes. command works type , doesn‚Äôt seem work {rstudiovim}, may issue parsing commands translation key presses. argument wait can specify seconds wait commands typed executed. way can review actually typed. find disparity typed ‚Äôs .virmc, please raise (add related) GitHub issue. can use rsvim_exec() single command helps narrow behaviour .","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Foord. Author, maintainer.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Foord D (2024). rstudiovim: Vim configuration RStudio. R package version 0.0.0.9000, https://davidfoord1.github.io/rstudiovim/, https://github.com/davidfoord1/rstudiovim.","code":"@Manual{,   title = {rstudiovim: Vim configuration for RStudio},   author = {David Foord},   year = {2024},   note = {R package version 0.0.0.9000, https://davidfoord1.github.io/rstudiovim/},   url = {https://github.com/davidfoord1/rstudiovim}, }"},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"configure-rstudio-vim-key-bindings-Ô∏è","dir":"","previous_headings":"","what":"Configure RStudio Vim key bindings ‚å®Ô∏è","title":"Vim configuration for RStudio","text":"RStudio supports Vim key bindings source editor, doesn‚Äôt support Vim config. {rstudiovim} offers ü™ü Windows-workaround reading Vim commands file simulating key presses execute behalf. Ok, slow moment. ‚Äôre , probably seriously considering using different editor, comprehensive configurable Vim features. Perhaps check Neovim R.nvim quarto-nvim. clear, package neat RStudio API integration Vim mode, option. just: list buttons want pressed; buttons pressed automatically . Nonetheless, kind works, welcome go crazy ‚Ä¶","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Vim configuration for RStudio","text":"Install load package: Create edit config file (.vimrc) Vim command line. Edit suggested path: Use Vim commands like map, imap, nmap noremap variants file create new key bindings. command must line. can add comment lines preceding double quotes \" like : can execute commands file one function call persist RStudio session. execute commands start every RStudio session following .Rprofile:","code":"# install.packages(\"remotes\") remotes::install_github(\"davidfoord1/rstudiovim\") # load and attach: library(rstudiovim) file.edit(rsvim_default_path()) \" home-row exit from insert mode imap jk <Esc> if (interactive())  {   rstudiovim::rsvim_exec_file(rprofile = TRUE) }"},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"config-in-the-cloud-Ô∏è","dir":"","previous_headings":"Overview","what":"Config in the cloud ‚òÅÔ∏è","title":"Vim configuration for RStudio","text":"rsvim_exec_file() points default rsvim_default_path() path, can use text file connection object containing Vim commands. instance can use web location easily share config machines, like execute example basic vimrc:","code":"rsvim_exec_file(\"https://raw.github.com/davidfoord1/rstudiovim/main/inst/basic.vimrc\")"},{"path":"https://davidfoord1.github.io/rstudiovim/index.html","id":"conditions-for-success-","dir":"","previous_headings":"Overview","what":"Conditions for success. üìÉ","title":"Vim configuration for RStudio","text":"‚Äôre using RStudio Windows. Setting Keybinding set editor must Vim (course!). file must open source editor, execute Vim commands navigated source . must file tab front, non-file tab like View() pane. Don‚Äôt give inputs button presses executed can interrupt . See vignette(\"rstudiovim\") detailed introduction.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rstudiovim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/exec_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"Error while executing Vim command ‚Äî exec_stop","title":"Error while executing Vim command ‚Äî exec_stop","text":"Helper function rsvim_exec","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/exec_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error while executing Vim command ‚Äî exec_stop","text":"","code":"exec_stop(message, command, suggestion = \"\")"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/exec_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error while executing Vim command ‚Äî exec_stop","text":"message statement describes error occurred. command Vim command attempted. suggestion suggest possible cause/fix error.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/exec_stop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error while executing Vim command ‚Äî exec_stop","text":"Exits R execution.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rstudio_vim_commands.html","id":null,"dir":"Reference","previous_headings":"","what":"RStudio Vim Commands data.frame ‚Äî rstudio_vim_commands","title":"RStudio Vim Commands data.frame ‚Äî rstudio_vim_commands","text":"data.frame commands valid use taken RStudio Vim key-binding javascript file. See pre-processing create_rstudio_vim_commands.R. fully comprehensive list include commands like help R.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rstudio_vim_commands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RStudio Vim Commands data.frame ‚Äî rstudio_vim_commands","text":"","code":"rstudio_vim_commands"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rstudio_vim_commands.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RStudio Vim Commands data.frame ‚Äî rstudio_vim_commands","text":"data frame < 50 rows 2 columns: name Full command name short_name Shorthand can used instead","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rstudio_vim_commands.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"RStudio Vim Commands data.frame ‚Äî rstudio_vim_commands","text":"https://github.com/rstudio/rstudio/blob/main/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ace/keybinding-vim-uncompressed.js","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_add_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Append command to config file ‚Äî rsvim_add_command","title":"Append command to config file ‚Äî rsvim_add_command","text":"Append Vim ex command end config file, optionally preceded descriptive comment.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_add_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append command to config file ‚Äî rsvim_add_command","text":"","code":"rsvim_add_command(command, comment = \"\", to = rsvim_default_path())"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_add_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append command to config file ‚Äî rsvim_add_command","text":"command String. Vim ex command. comment String. Text describing purpose command. written one line command, preceded double-quotes \" treated comment. String. File path config file.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_add_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append command to config file ‚Äî rsvim_add_command","text":"Returns NULL invisibly.","code":""},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_default_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get suggested config file path ‚Äî rsvim_default_path","title":"Get suggested config file path ‚Äî rsvim_default_path","text":"file .vimrc located %APPDATA%/RStudio/keybindings/ can also find RStudio's JSON keybinding config files.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_default_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get suggested config file path ‚Äî rsvim_default_path","text":"","code":"rsvim_default_path()"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_default_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get suggested config file path ‚Äî rsvim_default_path","text":"String. full file path .vimrc","code":""},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_default_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get suggested config file path ‚Äî rsvim_default_path","text":"","code":"if (FALSE) { # \\dontrun{ file.edit(rsvim_default_path()) } # }"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_example_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to rstudiovim example config ‚Äî rsvim_example_path","title":"Path to rstudiovim example config ‚Äî rsvim_example_path","text":"Get path example .vimrcs installed package. basic file used default template rsvim_use_template(). can use want review file editor. can also view files online GitHub inst folder.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_example_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to rstudiovim example config ‚Äî rsvim_example_path","text":"","code":"rsvim_example_path(name = c(\"basic\", \"full_example\"))"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_example_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path to rstudiovim example config ‚Äî rsvim_example_path","text":"name String. Name example file find path . 2 provided, \"basic\" \"full_example\".","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_example_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to rstudiovim example config ‚Äî rsvim_example_path","text":"String. full path example file.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a single Vim command in the source editor ‚Äî rsvim_exec","title":"Execute a single Vim command in the source editor ‚Äî rsvim_exec","text":"Pass string executed Vim command RStudio source editor. function sends input key presses type command.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a single Vim command in the source editor ‚Äî rsvim_exec","text":"","code":"rsvim_exec(command, wait = 0)"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a single Vim command in the source editor ‚Äî rsvim_exec","text":"command String. Vim command execute. text type Vim command dialogue box pressing : pressing Enter. wait Numeric. Seconds delay typing command pressing enter. can give time review commands testing troubleshooting.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a single Vim command in the source editor ‚Äî rsvim_exec","text":"Returns NULL invisibly.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"conditions","dir":"Reference","previous_headings":"","what":"Conditions","title":"Execute a single Vim command in the source editor ‚Äî rsvim_exec","text":"Vim keybindings must enabled must file open front source editor execute commands moved focus source . error different front like View() tab.","code":""},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a single Vim command in the source editor ‚Äî rsvim_exec","text":"","code":"if (FALSE) { # \\dontrun{ #' # Create a home-row binding jk to go from insert mode to normal mode. rsvim_exec(\"imap jk <Esc>\")  # Replace \"text\" with \"rep\" everywhere in the active document. rsvim_exec(\"%s/text/rep/g\")  # Bring up RStudio's Vim help (see Ex Commands for other commands) rsvim_exec(\"help\") } # }"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute all commands in a Vim config file ‚Äî rsvim_exec_file","title":"Execute all commands in a Vim config file ‚Äî rsvim_exec_file","text":"Execute line file Vim commands. Include Vim commands map, imap, nmap vmap file customise source editor keybindings. Use rsvim_exec_file() execute commands. Bindings persist duration RStudio session. Use rsvim_exec_file(rprofile = TRUE) .Rprofile execute commands RStudio startup, always active.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute all commands in a Vim config file ‚Äî rsvim_exec_file","text":"","code":"rsvim_exec_file(con = rsvim_default_path(), rprofile = FALSE, wait = 0)"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute all commands in a Vim config file ‚Äî rsvim_exec_file","text":"con string file path connection object file Vim commands execute. rprofile Logical. Set TRUE calling function within .Rprofile .e. RStudio API available. changes behaviour immediate execution waiting RStudio API become available. Currently works RStudio startup, R session restart. wait Numeric. Seconds delay typing command pressing enter. can give time review commands testing troubleshooting.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute all commands in a Vim config file ‚Äî rsvim_exec_file","text":"Returns NULL invisibly","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute all commands in a Vim config file ‚Äî rsvim_exec_file","text":"can execute command Vim normal mode manually pressing : enter command mode, typing command pressing Enter. use function write commands file passed con. can include comments lines starting double quotes \". command line, like: imap jk <Esc> function simulate key presses execute commands file. default file called .vimrc, can file text right format.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"rprofile-execution","dir":"Reference","previous_headings":"","what":"Rprofile execution","title":"Execute all commands in a Vim config file ‚Äî rsvim_exec_file","text":"rprofile = TRUE function uses setHook() wait RStudio API become available executing commands. triggered first time RStudio session opened, every R session restart.","code":""},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_exec_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute all commands in a Vim config file ‚Äî rsvim_exec_file","text":"","code":"if (FALSE) { # \\dontrun{ # Execute interactively: rsvim_exec_file()  # Execute on startup with this in your .Rprofile file: if (interactive()) rsvim_exec_file(rprofile = TRUE) } # }"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_is_valid_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Vim ex command is valid ‚Äî rsvim_is_valid_command","title":"Check if a Vim ex command is valid ‚Äî rsvim_is_valid_command","text":"Checks RStudio defaultExCommandMap keybinding-vim-uncompressed.js. list complete include example :help :R.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_is_valid_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Vim ex command is valid ‚Äî rsvim_is_valid_command","text":"","code":"rsvim_is_valid_command(command)"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_is_valid_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Vim ex command is valid ‚Äî rsvim_is_valid_command","text":"command String. Command check validity.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_is_valid_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Vim ex command is valid ‚Äî rsvim_is_valid_command","text":"Logical. Whether command supported RStudio's javascript implementation Vim.","code":""},{"path":[]},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_is_valid_command.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Vim ex command is valid ‚Äî rsvim_is_valid_command","text":"","code":"# valid commands rsvim_is_valid_command(\"map\") #> [1] TRUE rsvim_is_valid_command(\"noremap\") #> [1] TRUE  # not valid commands rsvim_is_valid_command(\"hello\") #> [1] FALSE  # it is not a complete list at present: rsvim_is_valid_command(\"help\") #> [1] FALSE"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_use_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Vim config from a template ‚Äî rsvim_use_template","title":"Build a Vim config from a template ‚Äî rsvim_use_template","text":"Create new config file existing config file. default based basic.virmc.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_use_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Vim config from a template ‚Äî rsvim_use_template","text":"","code":"rsvim_use_template(   to = rsvim_default_path(),   from = rsvim_example_path(),   overwrite = FALSE )"},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_use_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Vim config from a template ‚Äî rsvim_use_template","text":"String. File path write Vim config file. String. File path config file copy . overwrite Logical. default function error already file location. Use overwrite = TRUE replace existing file contents .","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_use_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Vim config from a template ‚Äî rsvim_use_template","text":"Returns path invisibly.","code":""},{"path":"https://davidfoord1.github.io/rstudiovim/reference/rsvim_use_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a Vim config from a template ‚Äî rsvim_use_template","text":"","code":"if (FALSE) { # \\dontrun{ rsvim_use_template()  rsvim_use_template(   \"path/to/my/custom/.virmc\",   \"path/to/template/.virmc\" ) } # }"}]
